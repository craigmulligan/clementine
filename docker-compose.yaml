# docker-compose.yml
version: "3"
services:
  nginx:
    build: ./nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - clementine
    ports:
      - 8080:8080
      - 80:80
      - 443:80

  worker:
    build: ./server
    depends_on:
      - postgres
      - redis
    environment:
      PORT: 80
      DATABASE_URL: postgres://user:pass@postgres:5432/db
      NODE_ENV: development
      SESSION_SECRET: ${SESSION_SECRET:-"super-secret"}
    ports:
      - 80
    command: npm run dev:worker
    volumes:
      - ./server/src:/app/src
      - ./server/bin:/app/bin
      - ./server/package.json:/app/package.json
    networks:
      - clementine

  server:
    build: ./server
    depends_on:
      - postgres
      - redis
      - nginx
    environment:
      PORT: 80
      DATABASE_URL: postgres://user:pass@postgres:5432/db
      NODE_ENV: development
      SESSION_SECRET: ${SESSION_SECRET:-"super-secret"}
      SMTP: ${SMTP}
      SMTP_EMAIL_FROM: ${SMTP_EMAIL_FROM}
      ENGINE_API_KEY: ${ENGINE_API_KEY}
    ports:
      - 80
    command: npm run dev
    volumes:
      - ./server/src:/app/src
      - ./server/bin:/app/bin
      - ./server/package.json:/app/package.json
    networks:
      - clementine

  client:
    build: ./client
    environment:
      NODE_ENV: development
      PORT: 80
    ports:
      - 80
    stdin_open: true
    command: npm run start
    volumes:
      - ./client/src:/app/src
    networks:
      - clementine

  postgres:
    image: postgres:10.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: db
    networks:
      - clementine

  redis:
    image: 'bitnami/redis:latest'
    ports:
      - "6379:6379"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    networks:
      - clementine

networks:
  clementine:
    # Use a custom driver
    driver: bridge
